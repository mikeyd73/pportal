<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, spUtil) {

	var c = this;

	_createChart();


	function _createChart() {

		c.myChart = new Highcharts.Chart({

			// This is were we set the configuration
			// parameters that are unique to each
			// type of chart
			chart: {
				type: 'areaspline', // What Chart Type
				renderTo: 'incByContactType' // The DIV ID to render it into
				// height: "100%"
			},

			title: {
				text: 'Weekly Volume, Last 90 Days'
			},		
			exporting: {
				enabled: true
			},
			credits: {
				enabled: false
			},
			legend: {
			},
			xAxis: {
				categories: c.data.mySeriesCategories
				/**
				plotBands: [{ // visualize the weekend
					from: 4.5,
					to: 6.5,
					color: 'rgba(68, 170, 213, .2)'
				}]
				**/
			},
			yAxis: {
				title: {
					text: 'Contacts'
				}
			},
			tooltip: {
				shared: true,
				valueSuffix: ' units'
			},
			plotOptions: {
				areaspline: {
					fillOpacity: 0.5,
					stacking: 'normal'
				}
			},

			series: c.data.mySeriesData // Set the series data from server script
		});
	}
} // END - Client Script]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>ssp_inc_contact_type</id>
        <internal>false</internal>
        <link/>
        <name>Incidents by Contact Type</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */

	// Get an array of colors to use for the bars
	var spc = new SSPChartUtils();
	data.chartColors = spc.getCategoryPalette();
	
	// Normally, here's where we would create a query
	// to retrieve the data needed for the chart.  We
	// would create the query in a separate "Script Include"
	// on the server, and call that method from here, to
	// return the "data" in the format needed below.
	//
	var scu = new SSPChartUtils();
	var rez = scu.incidentsByContactType();
	
	data.mySeriesData = rez.serDat;
	data.mySeriesCategories = rez.serCats;
	
	// For mockup purposes, we will hard code the "Series"
	// data into a variable that we can access from the 
	// client script:
	/**
	data.mySeriesCategories = [
		'Monday',
		'Tuesday',
		'Wednesday',
		'Thursday',
		'Friday',
		'Saturday',
		'Sunday'
	];
	
	data.mySeriesData = [
		{
        name: 'John',
        data: [3, 4, 3, 5, 4, 10, 12],
				color: data.chartColors[0]
    }, {
        name: 'Jane',
        data: [1, 3, 4, 3, 3, 5, 4],
				color: data.chartColors[1]
		}, {
		    name: 'Larry',
        data: [3, 2, 6, 2, 9, 4, 6],
				color: data.chartColors[2]
		}
	];
	**/
	
	
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admindavid</sys_created_by>
        <sys_created_on>2019-06-18 19:52:50</sys_created_on>
        <sys_id>a8a19d3adbca7b00d3d574608c96191e</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>Incidents by Contact Type</sys_name>
        <sys_package display_value="Persona SSP" source="x_saic4_persona_ss">0e190436db867b00d3d574608c96196d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Persona SSP">0e190436db867b00d3d574608c96196d</sys_scope>
        <sys_update_name>sp_widget_a8a19d3adbca7b00d3d574608c96191e</sys_update_name>
        <sys_updated_by>admindavid</sys_updated_by>
        <sys_updated_on>2019-11-04 15:18:09</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default">
  <div class="panel-primary panel-heading"> 
    <h2 class="h4 panel-title ng-binding">Incidents by Contact Type</h2> 
  </div>
  <div class="panel-body"> 
<div id="incByContactType" style="width: 100%; min-height: 340px; margin: 0 auto"></div>
  </div>
</div>
]]></template>
    </sp_widget>
</record_update>
