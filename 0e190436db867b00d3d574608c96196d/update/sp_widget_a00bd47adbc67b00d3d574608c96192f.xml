<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, $rootScope, spUtil) {
  var c = this;
	
//	$rootScope.hasRequestsOrApprovals = c.data.request.hasAny || c.data.approvals.hasAny;
	$rootScope.hasRequestsOrApprovals = false;
	
	this.KEYS = {
						DOWN:40,
						LEFT:37,
						RIGHT:39,
						TAB:9,
						UP:38
					 };


	$scope.show_quicklink = true;
	$scope.show_request = true;
	$scope.show_approvals = true;
	
	
	c.data.myQuickLinks = c.data.mainLinks;
	c.data.titleQL = "Quick Links & Info";

	// Event handlers for each of the above events
	$scope.$on('sspHelpClick', function(event,data) { 
		//spUtil.addTrivialMessage("I heard a click on 'Help'!");
		c.data.titleQL = "Top Help Requests:";
		c.data.myQuickLinks = c.data.helpLinks;
	});

	$scope.$on('sspServicesClick', function(event,data) { 
		//spUtil.addTrivialMessage("I heard a click on 'Services'!");
		c.data.titleQL = "Top Service Requests:";
		c.data.myQuickLinks = c.data.serviceLinks;
	});
	
	$scope.$on('sspAnswersClick', function(event,data) { 
		//spUtil.addTrivialMessage("I heard a click on 'Answers'!");
		c.data.titleQL = "Top Answers:";
		c.data.myQuickLinks = c.data.answerLinks;
	});
	
	$scope.$on('sspCategorySelect', function(event, data) { 
	
		if (data.category == "Finance") {
			c.data.titleQL = "Top in Finance";
			c.data.myQuickLinks = c.data.financeLinks;
		} else if (data.category == "Human Resources") {
			c.data.titleQL = "Top in Human Resources";
			c.data.myQuickLinks = c.data.humanLinks;
		} else if (data.category == "Technology") {
			c.data.titleQL = "Top in Technology";
			c.data.myQuickLinks = c.data.techLinks;
		}else if (data.category == "Facilities") {
			c.data.titleQL = "Top in Facilities";
			c.data.myQuickLinks = c.data.facilityLinks;
		}
		
	});
	
	$scope.changePanel = function(panel_name) {
		
		if (panel_name == 'request') {
			$scope.show_quicklink = false;
			$scope.show_request = true;
			$scope.show_approvals = false;
			$('a.request').focus();
			
		} else if (panel_name == 'quicklink') {
			$scope.show_quicklink = true;
			$scope.show_request = false;
			$scope.show_approvals = false;
			$('a.quicklink').focus();
			
		} else {
			$scope.show_request = false;
			$scope.show_quicklink = false;
			$scope.show_approvals = true;
			$('a.approval').focus();
		}
		
	};
	
	if (c.data.showApprovals)
		spUtil.recordWatch($scope, "sysapproval_approver", "state=requested^approverIN" +  $scope.data.approvals.myApprovals.toString());
	
	function get() {
		spUtil.update($scope);
	}

	$scope.approve = function(id) {
		$scope.data.op = "approved";
		$scope.data.target = id;
		get();
	};

	$scope.reject = function(id) {
		$scope.data.op = "rejected";
		$scope.data.target = id;
		get();
	};
	
	$scope.switchTab = function($event, tab) {
		var key = null;
		if (event.keyCode === c.KEYS.LEFT || event.keyCode === c.KEYS.UP)
			key = c.KEYS.LEFT;
		else if (event.keyCode === c.KEYS.RIGHT || event.keyCode === c.KEYS.DOWN)
			key = c.KEYS.RIGHT;
		else if (event.keyCode === c.KEYS.TAB) {
			return;
		}
		if (key === null)
			return;
	
		if (!c.data.approvals.hasAny) {
			
		}
		
		if (tab == 'request') {
			$scope.show_quicklink = false;
			$scope.show_request = true;
			$scope.show_approvals = false;
			$('a.request').focus();
			
		} else if (tab == 'quicklink') {
			$scope.show_request = false;
			$scope.show_quicklink = true;
			$scope.show_approvals = false;
			$('a.quicklink').focus();
			
		} else {
			$scope.show_request = false;
			$scope.show_quicklink = false;
			$scope.show_approvals = true;
			$('a.approval').focus();
		}
		
		/**
		$scope.show_request = !$scope.show_request;
		if ($scope.show_request)
			$('a.request').focus();
		else
			$('a.approval').focus();
		**/
	}

}
]]></client_script>
        <controller_as>c</controller_as>
        <css>// My Stuff Home Page Widget

@media only screen and (max-width : 991px) {
	.panels-container {
 	  min-height : 240px;
	}
}

@media only screen and (min-width : 992px) {
	.panels-container {
 	  min-height : 240px;
	}
}

@media only screen and (max-width : 700px) {
	.ssp-panel-widget {
 	  height : 95%;
	}
}

.panel-body {
	min-height: 240px; 
}

.panel-heading {
    padding: 10px 15px 0;
}

.list-group-links {
	padding-top: 10px;
}

.panels-container-links {
  margin-bottom: 10px;
}
.panels-container-requests {
  margin-bottom: 0px;
}
.panels-container-approval {
  margin-bottom: 0px;
}
.overflow-links {
  margin-top: 10px;
  height : 220px;
  max-height : 220px;
	overflow: auto;
}
.overflow-requests {
  height : 255px !important;
  max-height : 255px;
	overflow: auto;
}
.overflow-approvals {
  height : 255px !important;
  max-height : 255px;
	overflow: auto;
}
.sp-approval &gt; .approval-rows {
  padding: 10px;
}

.sc-tab-a {
    color: #428bca;
    border: 0;
    border-bottom: 3px solid #428bca;
}

.nav &gt; li &gt; a:focus {
    background-color: #ffffff !important;
    text-decoration: underline;
}
.nav &gt; li &gt; a:hover {
    background-color: #ffffff !important;
    text-decoration: underline;
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>ssp_my_stuff</id>
        <internal>false</internal>
        <link/>
        <name>SSP My Stuff</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {

	if (input) {
		if (input.op == 'approved' || input.op == 'rejected') {
			var app = new GlideRecord("sysapproval_approver");
			if (app.get(input.target) && app.state.canWrite()) {
				app.state = input.op;
				app.update();
			}
		}
	}

	// Use SSP MyStuff Util to fill
	// the various link lists
	var msu = new SSPMyStuffUtil();
	data.mainLinks = msu.getLinkListByCategory("mainLinks");
	data.helpLinks = msu.getLinkListByCategory("helpLinks");
	data.serviceLinks = msu.getLinkListByCategory("serviceLinks");
	data.answerLinks = msu.getLinkListByCategory("answerLinks");
	data.financeLinks = msu.getLinkListByCategory("financeLinks");
	data.humanLinks = msu.getLinkListByCategory("humanLinks");
	data.techLinks = msu.getLinkListByCategory("techLinks");
	data.facilityLinks = msu.getLinkListByCategory("facilityLinks");

	data.wAltStatus = $sp.getWidget("ssp_current_status_alt", {"title": "Current Status"});


	function getField(gr, name) {
		var f = {};
		var id = gr.getUniqueValue();
		gr = new GlideRecord(gr.getRecordClassName());
		gr.get(id);
		f.display_value = gr.getDisplayValue(name);
		f.value = gr.getValue(name);
		var ge = gr.getElement(name);
		if (ge) {
			var ed = ge.getED();
			if (ed)
				f.type = ed.getInternalType();
			f.label = ge.getLabel();
		}
		return f;
	}

	function getMyRequestSysIds() {
		var ids = {};
		var rq_filter = new GlideRecord('request_filter');
		rq_filter.addActiveQuery();
		if (rq_filter.isValidField('applies_to'))
			rq_filter.addQuery('applies_to', 1).addOrCondition('applies_to', 10);
		rq_filter.query();
		while(rq_filter.next()) {
			var tableName = rq_filter.table_name;
			if (rq_filter.isValidField('table'))
				tableName = rq_filter.table;
			var gr = new GlideRecord(tableName);
			gr.addQuery(rq_filter.filter);
			gr.query();
			while(gr.next()) {
				var portalSettings = {};
				portalSettings.page = rq_filter.portal_page.nil()? '' : rq_filter.portal_page.getDisplayValue() + '';
				portalSettings.primary_display = rq_filter.primary_display.nil()? '': rq_filter.primary_display + '';
				portalSettings.secondary_displays = rq_filter.secondary_display.nil()? '': rq_filter.secondary_display + '';
				ids[gr.sys_id + ''] = portalSettings;
			}
		}
		return ids;
	}

	function getMyApprovalsIds() {
		var u = gs.getUserID();
		var answer = [];
		var i = 0;
		answer[i++] = u + '';
		var g = new GlideRecord("sys_user_delegate");
		g.addQuery("delegate", u);
		g.addQuery("approvals", "true");
		g.addQuery("starts", "<=", gs.daysAgo(0));
		g.addQuery("ends", ">=", gs.daysAgo(0));
		g.query();
		while( g.next())
			answer[i++] = g.user + '';
		return answer;
	}

	// retrieve the request's
	var myRequestMap = getMyRequestSysIds();
	var taskIDs = Object.keys(myRequestMap);
	var gr = new GlideRecordSecure('task');
	gr.addActiveQuery();
	gr.addQuery('sys_id', taskIDs);
	gr.orderByDesc('sys_created_on');
	gr.chooseWindow(0,11);
	gr.query();

	data.request = {};
	data.approvals = {};
	
	data.request.hasAny = false;
	data.approvals.hasAny = false;
	
	data.request.req_list = [];
	var recordIdx = 0;

	while (gr.next()) {
		if (recordIdx == 10)
			break;
		var portalSettings = myRequestMap[gr.getUniqueValue()];
		if (typeof portalSettings == 'undefined')
			portalSettings = {};

		var record = {};
		record.sys_id = gr.getValue('sys_id');

		if (gr.getRecordClassName() == 'sc_request') {
			var ritm = new GlideRecord("sc_req_item");
			ritm.addQuery("request", gr.getUniqueValue());
			ritm.query();
			if (ritm.getRowCount() == 0)
				continue;
			if (ritm.getRowCount() > 1)
				record.display_field = gs.getMessage("{0} requested items", ritm.getRowCount());
			else {
				ritm.next();
				record.display_field = ritm.cat_item.getDisplayValue() || ritm.getDisplayValue("short_description");
			}
			record.url = { id: portalSettings.page? portalSettings.page: 'sc_request', table: 'sc_request', sys_id: record.sys_id};
		} else {
			record.display_field = portalSettings.primary_display ? getField(gr, portalSettings.primary_display).display_value : getField(gr, 'number').display_value;
			record.url = { id: portalSettings.page? portalSettings.page :'ticket', table: gr.getRecordClassName(), sys_id: record.sys_id};
		}
		if (portalSettings.secondary_displays) {
			record.secondary_displays = [];
			portalSettings.secondary_displays.split(",").forEach(function (sDisplay){
				record.secondary_displays.push(getField(gr, sDisplay));
			});
		}
		else 
			record.secondary_displays = getField(gr, 'short_description');

		record.updated_on = gr.getValue('sys_updated_on');
		data.request.req_list.push(record);
		recordIdx++;
	}

	if (recordIdx == 10 && gr.isValidRecord())
		data.request.maximum_entries = true;
	data.request.hasAny = data.request.req_list.length > 0 ? true : false;
	
	// fetch approvals for the user.

	// data.showApprovals = gs.getUser().hasRole('approver_user');
	data.showApprovals = true;
	
	// Retreive approvals related to the User.
	if (data.showApprovals) {
		gr = new GlideRecord('sysapproval_approver');
		gr.chooseWindow(0, 10);
		var qc1 = gr.addQuery("state", "requested");
		data.approvals.myApprovals = getMyApprovalsIds();
		gr.addQuery("approver", data.approvals.myApprovals);
		gr.orderBy("sys_created_on");
		gr.query();

		var approvalsCount = gr.getRowCount();
		var approvals = [];
		var ids = [];

		while (gr.next()) {
			var task = getRecordBeingApproved(gr);
			if (!task.isValidRecord())
				continue;

			ids.push(gr.getUniqueValue());
			var t = {};
			t.number = task.getDisplayValue();
			t.short_description = task.short_description.toString();
			if (gr.getValue("approver") != gs.getUserID())
				t.approver = gr.approver.getDisplayValue();
			if (task.isValidField("opened_by") && !task.opened_by.nil())
				t.opened_by = task.opened_by.getDisplayValue();
			// requestor >> opener
			if (task.isValidField("requested_by") && !task.requested_by.nil())
				t.opened_by = task.requested_by.getDisplayValue();

			t.start_date = task.getDisplayValue('start_date');
			t.end_date = task.getDisplayValue('end_date');
			t.quantity = task.getDisplayValue('quantity');
			t.table = task.getLabel();
			if (task.getValue("price") > 0)
				t.price = task.getDisplayValue("price");

			if (task.getValue("recurring_price") > 0)
				t.recurring_price = task.getDisplayValue("recurring_price");

			t.recurring_frequency = task.getDisplayValue("recurring_frequency");

			var items = [];
			var idx = 0;
			var itemsGR = new GlideRecord("sc_req_item");
			itemsGR.addQuery("request", task.sys_id);
			itemsGR.query();
			if (itemsGR.getRowCount() > 1)
				t.short_description = itemsGR.getRowCount() + " requested items";

			while (itemsGR.next()) {
				var item = {};
				item.short_description = itemsGR.short_description.toString();
				if (itemsGR.getValue("price") > 0)
					item.price = itemsGR.getDisplayValue("price");
				if (itemsGR.getValue("recurring_price") > 0) {
					item.recurring_price = itemsGR.getDisplayValue("recurring_price");
					item.recurring_frequency = itemsGR.getDisplayValue("recurring_frequency");
				}
				if (itemsGR.getRowCount() == 1) {
					item.variables = $sp.getRecordVariablesArray(itemsGR);
					t.short_description = itemsGR.short_description.toString();
				}

				items[idx] = item;
				idx++;
			}

			var j = {};
			j.sys_id = gr.getUniqueValue();
			j.table = gr.getRecordClassName();
			j.task = t;
			if (task) {
				var optionsGr = task.request_item ? task.request_item.getRefRecord() : task;
				j.variables = $sp.getRecordVariablesArray(optionsGr);
			}

			j.items = items;
			j.state = gr.getValue("state");
			j.stateLabel = gr.state.getDisplayValue();
			approvals.push(j);
		}

		data.approvals.ids = ids;
		data.approvals.approval_list = approvals;
		if (approvals.length > 10)
			data.approvals.show_viewAll = true;

		data.approvals.hasAny = approvals.length > 0 ? true : false;
	}

	function getRecordBeingApproved(gr) {
		if (!gr.sysapproval.nil())
			return gr.sysapproval.getRefRecord();
		return gr.document_id.getRefRecord();
	}

})();

]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admindavid</sys_created_by>
        <sys_created_on>2019-06-18 15:54:10</sys_created_on>
        <sys_id>a00bd47adbc67b00d3d574608c96192f</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>SSP My Stuff</sys_name>
        <sys_package display_value="Persona SSP" source="x_saic4_persona_ss">0e190436db867b00d3d574608c96196d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Persona SSP">0e190436db867b00d3d574608c96196d</sys_scope>
        <sys_update_name>sp_widget_a00bd47adbc67b00d3d574608c96192f</sys_update_name>
        <sys_updated_by>adminbleicherd</sys_updated_by>
        <sys_updated_on>2020-01-13 13:42:33</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default panel-links">
<!--  <div class="panel panel-default xssp-panel-widget" ng-if = "$root.hasRequestsOrApprovals || $root.hasSavedCarts"> -->
  
 	<div class="panel-heading panel-heading-links pad-bottom pad-bottom-links">
    	<ul class="nav nav-tabs nav-tabs-links" style="border-bottom: 0px;" role="tablist">
      	<li class="item" role="tab" tabindex="-1" ng-click="changePanel('quicklink')" ng-keydown="switchTab($event, 'quicklink')">
        	<a ng-class="{'sc-tab-a' : show_quicklink}" href="javascript:void(0)" class="quicklink  sc-tab-a">
          	<span> {{c.data.titleQL}} </span>
          </a>
        </li>  
      	<li ng-if="c.data.request.hasAny == true" class="item" role="tab" tabindex="1" ng-click="changePanel('request')" ng-keydown="switchTab($event, 'request')">
        	<a ng-class="{'sc-tab-a' : show_request}" href="javascript:void(0)" class="request sc-tab-a">
          	<span> ${My Requests} </span>
          </a>
        </li>  
        <li ng-if = "c.data.approvals.hasAny && c.data.showApprovals" class="item" role="tab" tabindex="2" ng-click="changePanel('approval')" ng-keydown="switchTab($event, 'approval')">
        	<a ng-class="{'sc-tab-a' : show_approvals}" href="javascript:void(0)" class="approval  Xsc-tab-a">
          	<span > ${My Approvals} </span>
          </a>
        </li>  
    	</ul>
  </div>
  
  <div class="panel-body"> 
  
  <!-- Quick Links Panel -->
  <div ng-if="show_quicklink " class="panels-container-links">
    <div class="container-fluid">
      <div class="row">
        <div class="col-sm-6">
					<ul class="list-group list-group-links">
          	<li class="list-group-item" ng-repeat="item in c.data.myQuickLinks">
            <a href="{{item.link}}"><strong><i class="fa fa-arrow-circle-right"></i></strong> {{item.title}}</a>
            </li>  
          </ul>
        </div>
        <div class="col-sm-6" class="overflow-links">
 
          <!-- Status Msg --> 
          <sp-widget widget="c.data.wAltStatus"></sp-widget>
          <!-- /Status Msg -->       
 
        </div>
      </div>
    </div>

  </div>

  <!-- Requests Panel -->
  <!--
  <div ng-if="show_request && c.data.request.hasAny == false " class="panel-body panels-container-requests">
 		${ You do not have any Requests } 
  </div>
 	-->
  <div ng-if = "show_request && c.data.request.hasAny == true && !show_quicklink && !show_approvals" class="panels-container-requests overflow-requests list-group">
    	<div class="list-group-item row" ng-repeat="item in c.data.request.req_list" style="margin:0px;" >
      		<div class="col-xs-8" style="">
            <div>
             <a href="?id={{::item.url.id}}&table={{::item.url.table}}&sys_id={{::item.url.sys_id}}"> {{::item.display_field}} </a>
            </div>
            <small class="text-muted">
            	<div ng-repeat="f in item.secondary_displays">
            			<span>{{::f.display_value}}</span>
              </div>
            </small>
          </div>
         	<div class="col-xs-4">
              <i class="fa fa-clock-o" aria-hidden="true"></i>
              <sn-time-ago timestamp="::item.updated_on"/>
          </div>   
      </div>
    	<div class="col-sm-12" ng-show="c.data.request.maximum_entries" style="padding:15px; text-align:center;">
          <a href="?id=requests"> ${View All Requests}</a>  
      </div>
  </div>
  
  <!-- Approvals Panel -->
  <div class="panels-container-approval overflow-approvals" ng-if = "!show_request && !show_quicklink">
        <div ng-repeat="approval in data.approvals.approval_list" class="sp-approval">
          <div class="row approval-rows" style="margin:0px">
          <div class="col-sm-9">
            <div ng-if="approval.task.number || approval.task.short_description">
              <a ng-href="?id=approval&table=sysapproval_approver&sys_id={{::approval.sys_id}}" title="{{data.ViewApprovalPageMsg}}">
                <span ng-if="approval.task.number">{{::approval.task.number}}</span>
                <span ng-if="approval.task.number && approval.task.short_description"> - </span>
                <span ng-if="approval.task.short_description">{{::approval.task.short_description}}</span>
              </a>
            </div>
            <div ng-if="approval.task.opened_by"><label>${Requestor}</label> {{::approval.task.opened_by}}</div>
            <div ng-if="approval.task.approver"><label>${Approver}</label> {{::approval.task.approver}}</div>
            <div ng-if="approval.task.start_date"><label>${Start}</label> {{::approval.task.start_date}}</div>
            <div ng-if="approval.task.end_date"><label>${End}</label> {{::approval.task.end_date}}</div>
            <div ng-if="approval.task.quantity"><label>${Quantity}</label> {{::approval.task.quantity}}</div>
            <div ng-if="approval.task.price"><label>${Price}</label> {{::approval.task.price}}
              <span ng-if="approval.task.recurring_price"><label>${Recurring price}</label> {{::approval.task.recurring_price}} {{::approval.task.recurring_frequency}}</span>
              <label ng-if="approval.task.quantity && approval.task.quantity > 1"> ${each}</label>
            </div>
            <div ng-if="approval.items.length == 1">
              <div ng-repeat="item in approval.items">
                <div ng-if="item.variables.length > 0" ng-init="variable_toggle=false">
                  <a href="javascript:void(0)" ng-click="variable_toggle = !variable_toggle">
                    <span class="glyphicon"
                          ng-class="{'glyphicon-chevron-down': !variable_toggle, 'glyphicon-chevron-up': variable_toggle}">
                    </span>
                    ${Options}
                  </a>
                  <div ng-repeat="variable in item.variables" ng-if="variable_toggle">
                    <label class="text-muted">{{::variable.label}}</label>
                    <div>{{::variable.display_value}}</div>
                  </div>
                </div>
              </div>
            </div>

            <div ng-if="approval.variables.length > 0" ng-init="variable_toggle=false">
              <a href="javascript:void(0)" ng-click="variable_toggle = !variable_toggle">
                <span class="glyphicon"
                      ng-class="{'glyphicon-chevron-down': !variable_toggle, 'glyphicon-chevron-up': variable_toggle}">
                </span>
                ${Options}
              </a>
              <div ng-repeat="variable in approval.variables" ng-if="variable_toggle">
                <label>{{::variable.label}}</label>
                <div>{{::variable.display_value}}</div>
              </div>
            </div>
          </div>

          <div class="col-sm-3">
            <button name="approve" ng-if="approval.state == 'requested'" class="btn btn-primary btn-block" style="border-width:1px;" ng-click="approve(approval.sys_id);">${Approve}</button>
            <button name="reject" ng-if="approval.state == 'requested'" class="btn btn-default btn-block" ng-click="reject(approval.sys_id);">${Reject}</button>
          </div>
        </div>
       </div>
  			<div class="col-sm-12" ng-show="c.data.approvals.show_viewAll" style="padding:15px; text-align:center;">
          <a href="?id=approvals">${View All Approvals}</a>  
        </div>
  </div>
 
  </div> 
    
</div>]]></template>
    </sp_widget>
</record_update>
