<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, spUtil) {

	var c = this;

	_createChart();


	function _createChart() {

		c.myChart = new Highcharts.Chart({
			
			// This is were we set the configuration
			// parameters that are unique to each
			// type of chart
			chart: {
				type: 'sankey', // What Chart Type
				renderTo: 'sankeyworkgroups' // The DIV ID to render it into
			},
			title: {
				text: 'Answered Call Distribution'
			},
			exporting: {
				enabled: true
			},
			credits: {
				enabled: false
			},
			name: 'Sankey demo series',
			series: c.data.mySeriesData // Set the series data from server script
			
		}); // END - Configuration parameters	

	} // END - _createChart method

} // END - Client Script]]></client_script>
        <controller_as>c</controller_as>
        <css>/* Make sure that padding behaves as expected */
* {box-sizing:border-box}

.panel-body {
 padding-top: 0px;
}

#sankeyworkgroups {
    min-width: 300px;
    max-width: 800px;
//   height: 600px;
    margin: 1em auto;
    // border: 1px solid silver;
}

#csv {
  display: none;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>ssp_sankey_diagram_2</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>SSP Sankey Diagram 2</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */

	// Get an array of colors to use for the bars
	var spc = new SSPChartUtils();
	data.chartColors = spc.getCategoryPalette();
	
	// Normally, here's where we would create a query
	// to retrieve the data needed for the chart.  We
	// would create the query in a separate "Script Include"
	// on the server, and call that method from here, to
	// return the "data" in the format needed below.
	//
	// var scsi = new SomeChartScriptInclude();
	// data.mySeriesData = scsi.getEmpCertSeriesData();
	//
	// For mockup purposes, we will hard code the "Series"
	// data into a variable that we can access from the 
	// client script:
	
	data.mySeriesData = [{
    keys: ['from', 'to', 'weight'],
    data: [
      ['Answered', 'CSR Callback', 44],
      ['Answered', 'CSR General', 376],
      ['Answered', 'EUS Callback', 278],
      ['Answered', 'EUS Escalations', 72],
      ['Answered', 'EUS General', 72],
      ['Answered', 'EUS MSApps', 110],
      ['Answered', 'EUS Outlook', 24],
      ['Answered', 'EUS Password', 76],
      ['Answered', 'FCR Password', 152],
      ['Answered', 'EUS Projects', 45],
      ['Answered', 'EUS Status', 24],
      ['Answered', 'EUS VPM', 206],

      ['CSR Callback', 'Not Held', 40],
      ['CSR Callback', 'Held', 4],
      ['CSR General', 'Not Held', 226],
      ['CSR General', 'Held', 150],
      ['EUS Callback', 'Not Held', 268],
      ['EUS Callback', 'Held', 10],
      ['EUS Escalations', 'Not Held', 69],
      ['EUS Escalations', 'Held', 10],
      ['EUS General', 'Not Held', 54],
      ['EUS General', 'Held', 24],
      ['EUS MSApps', 'Not Held', 90],
      ['EUS MSApps', 'Held', 30],
      ['EUS Outlook', 'Not Held', 24],
      ['EUS Outlook', 'Held', 0],
      ['EUS Password', 'Not Held', 96],
      ['EUS Password', 'Held', 0],
      ['FCR Password', 'Not Held', 108],
      ['FCR Password', 'Held', 45],
      ['EUS Projects', 'Not Held', 45],
      ['EUS Projects', 'Held', 0],
      ['EUS Status', 'Not Held', 24],
      ['EUS Status', 'Held', 0],
      ['EUS VPM', 'Not Held', 186],
      ['EUS VPM', 'Held', 26],
			
      ['Not Held', 'Completed Calls', 1347],
      ['Not Held', 'Abandoned Calls', 10],
      ['Held', 'Completed Calls', 110],
      ['Held', 'Abandoned Calls', 189]

    ]}];

	
	
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>adminbleicherd</sys_created_by>
        <sys_created_on>2020-01-02 17:56:50</sys_created_on>
        <sys_id>fbd1ac26db86c01010c483fb689619c7</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>SSP Sankey Diagram 2</sys_name>
        <sys_package display_value="Persona SSP" source="x_saic4_persona_ss">0e190436db867b00d3d574608c96196d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Persona SSP">0e190436db867b00d3d574608c96196d</sys_scope>
        <sys_update_name>sp_widget_fbd1ac26db86c01010c483fb689619c7</sys_update_name>
        <sys_updated_by>adminbleicherd</sys_updated_by>
        <sys_updated_on>2020-01-02 17:57:51</sys_updated_on>
        <template><![CDATA[<!-- div class="panel panel-default">
  <div class="panel-primary panel-heading"> 
    <h2 class="h4 panel-title ng-binding">Call Metrics - Workgroups</h2> 
  </div>
  <div class="panel-body"> 
    <!-- div id="empCertBarDiv" style="min-width: 310px; max-width: 600px; height: 300px; margin: 0 auto"></div -->   

  <div id="sankeyworkgroups"></div>

  <!-- /div>    
</div -->

]]></template>
    </sp_widget>
</record_update>
